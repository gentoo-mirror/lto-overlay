#FLTO should be of the form -flto[=n] where n is the number of threads to use during linking.
#It's usually a good idea to set this to the number of hardware threads in your system
FLTO="-flto=8"

# https://bugs.gentoo.org/603594
# Keep all static libraries unstripped.
# This should allow you to omit almost all -ffat-lto-objects flags and build many more packages with LTO.
# After enabling this you must rebuild all packages providing static libraries with LTO support.
# Use $ `equery b -n $(find /lib* /usr/lib* -type f -name "*.a" 2>/dev/null)` | sort | uniq
# or # `emerge -1va $(find /lib* /usr/lib* -type f -name "*.a" 2>/dev/null)` commands to get corresponding list.
STRIP_MASK="*.a"

#GRAPHITE contains Graphite specific optimizations and other optimizations that are disabled at O3
#but don't influence the compiler's judgement.
#With GCC 8.1.0, -ftree-loop-distribution is enabled by default at -O3
GRAPHITE="-fgraphite-identity -floop-nest-optimize" 
#NOTE: To use graphite, make sure you have gcc compiled with graphite support (add graphite to your USE).  Otherwise GCC will complain!

#FLTO and GRAPHITE are variables used in the LTO and Graphite overrides as well.  If you don't want Graphite or LTO,
#just unset these variables--no further action is necessary.  Don't rename these variables as the overrides depend on them.

#Your CFLAGS should contain ${FLTO} and, depending on your gcc, -fuse-linker-plugin
#Newer GCCs enable -fuse-linker-plugin by default.
#${GRAPHITE} should be included here as well.  If you do not want Graphite, just unset the GRAPHITE variable and keep CFLAGS the same.
#It will be easier for you to experiment that way.
CFLAGS="-march=native -O3 ${GRAPHITE} ${FLTO} -fuse-linker-plugin -pipe"

#Your CXXFLAGS should be a superset of your CFLAGS.  Most people will never need to add anything extra to their CXXFLAGS.
CXXFLAGS="${CFLAGS}"

#Your LDFLAGS should contain *ALL* of your CFLAGS for LTO to work.  It must receieve all optimization options, march, etc.
#package.cflags takes care of this for you--no need to manually add your {C,CXX}FLAGS here.
#
#It's usually a good idea to enable -Wl,--hash-style=gnu as well to help find packages which don't respect LDFLAGS
#Ensure that your profile's LDFLAGS are respected by including them first.
LDFLAGS="${LDFLAGS} -Wl,--hash-style=gnu"
#NOTE: your profile likely contains -Wl,--as-needed and -Wl,-O1.
#The -Wl,-01 here is a separate option sent to the linker that optimizes shared object binary sizes
#It is NOT related to the -O option given to gcc and has no bearing on that option.
#For example, compiling using: -flto -O3 -Wl,-O1:
#This will produce an LTO binary with -O3
#level optimization and also pass -O1 to the linker to reduce the shared object size.

#Consider also using cpuid2cpuflags to set your CPU_FLAGS_* variable in your make.conf for packages that rely on explicit optimizations such as intrinsics
